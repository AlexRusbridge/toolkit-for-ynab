name: Checks
on:
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.find.outputs.files }}
    steps:
      - uses: actions/checkout@v4

      - name: Set Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm run build:check

      # Get the list of checks for the check job
      - name: Find Check Files
        id: find
        run: |
          . ./checks/_lib.sh
          # Find check files, set them to the files arg in jq, and parse them as an array
          as_array="$(jq -rcn --arg files "$(find_check_files all)" '$files | split("\n") as $arr | { check: $arr }')"
          echo "files=$as_array">>"$GITHUB_OUTPUT"

  check:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.files) }}
    name: ${{ matrix.check }}
    steps:
      - uses: actions/checkout@v4

      - name: Set Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Run
        run: |
          . ${{ matrix.check }}
          check
